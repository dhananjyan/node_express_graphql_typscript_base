# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input CategoryInputType {
  image: String!
  name: String!
  parentCategory: ID
  slug: String!
}

type CategoryPaginatedListResponseType {
  hasMore: Boolean!
  item: [CategoryType!]!
  total: Float!
}

type CategoryType {
  _id: ID!
  childCategory: [CategoryType!]!
  createdAt: DateTimeISO!
  image: String!
  name: String!
  parentCategory: ID!
  slug: String!
  updatedAt: DateTimeISO!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Login {
  _id: ID!
  createdAt: DateTimeISO!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  permissions: [String!]!
  roles: [ID!]!
  token: String!
  updatedAt: DateTimeISO!
  userRoles: [RoleType!]!
}

input LoginInputType {
  password: String!
  username: String!
}

type LoginResponseType {
  data: Login
  message: String!
  status: Int!
}

type Mutation {
  createCategory(payload: CategoryInputType!): MutationResponseType!
  createRole(payload: RoleInputType!): MutationResponseType!
  createUser(payload: createUserInputType!): MutationResponseType!
  updateRole(payload: UpdateRoleInputType!): MutationResponseType!
  updateUser(payload: UpdateUserInputType!): MutationResponseType!
  userLogin(payload: LoginInputType!): LoginResponseType!
}

type MutationResponseType {
  message: String!
  status: Int!
}

"""The basic Permissions"""
enum Permissions {
  CATEGORY_CREATE
  CATEGORY_DELETE
  CATEGORY_READ
  CATEGORY_UPDATE
  USER_CREATE
  USER_DELETE
  USER_READ
  USER_UPDATE
}

type Query {
  category: CategoryPaginatedListResponseType!
  roles: RolePaginatedListResponseType!
  users(payload: paginatedFilterUserInputType!): UserPaginatedListResponseType!
}

input RoleInputType {
  name: String!
  permissions: [Permissions!]!
}

type RolePaginatedListResponseType {
  hasMore: Boolean!
  item: [RoleType!]!
  total: Float!
}

type RoleType {
  _id: ID!
  name: String!
  permissions: [String!]!
}

input UpdateRoleInputType {
  id: String!
  name: String
  permissions: [Permissions!]!
}

input UpdateUserInputType {
  country: String!
  email: String!
  firstName: String!
  id: ID!
  lastName: String!
  mobileNumber: String!
  roles: [String!]!
}

type UserPaginatedListResponseType {
  hasMore: Boolean!
  item: [UserType!]!
  total: Float!
}

type UserType {
  _id: ID!
  createdAt: DateTimeISO!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  roles: [ID!]!
  updatedAt: DateTimeISO!
  userRoles: [RoleType!]!
}

input createUserInputType {
  country: String!
  email: String!
  firstName: String!
  lastName: String!
  mobileNumber: String!
  password: String!
  roles: [String!]!
}

input paginatedFilterUserInputType {
  country: String
  email: String
  firstName: String
  lastName: String
  limit: Int! = 10
  mobileNumber: String
  page: Int! = 1
  roles: [String!]
}